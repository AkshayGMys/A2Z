Took some time and after 5-6 submissions , i figured out the return statements ;

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxSum = INT_MIN;
    int maxPathSum(TreeNode* root) {
        summation(root);
        return maxSum;
    }
    int summation(TreeNode* node)
    {
        if(!node) return 0;
        int left = summation(node->left);
        int right = summation(node->right);

        maxSum = max(maxSum , left+right+node->val );
        maxSum = max(maxSum , node->val);
        if(max(left,right)<0) return  node->val;
        if((max(left,right)+node->val) < 0) return 0;
        return  node->val + max(left,right);
    }

};
