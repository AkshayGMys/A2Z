//The problem is not to check whether a give n string is Good number or not but to give out the total number of GOod Numbers that can be made of the given length.
//THIS IS A PROBLEM SIMILAR TO THE IMPLEMENTATION OF POWER FUNCTINO BUT WITH MODULUS FUNCTION.
class Solution {
public:
     const long long MOD = 1000000007;

    long long modPow(long long base, long long exp, long long mod) {
        long long result = 1;
        base %= mod;
        while (exp > 0) {
            if (exp % 2 == 1) // if exp is odd
                result = (result * base) % mod;
            base = (base * base) % mod;
            exp /= 2;
        }
        return result;
    }

    int countGoodNumbers(long long n) {
        long long evenCount = (n + 1) / 2; // number of even indices
        long long oddCount  = n / 2;       // number of odd indices

        long long ways = (modPow(5, evenCount, MOD) * modPow(4, oddCount, MOD)) % MOD;
        return (int)ways;
    }
};
