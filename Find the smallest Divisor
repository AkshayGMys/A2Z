
//Solved in an attempt;
class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) 
    {
        int left = 1;
        int right = *max_element(nums.begin(),nums.end());
        int mid;
        while(left<=right)
        {
            mid = left +(right - left ) / 2;
            int sum = value(nums,threshold,mid);
            if(sum>threshold)
            {
               left = mid+1;
            }
            else
              right = mid-1; 
              
        }
        return left;
    }
    int value(vector<int>& nums, int threshold,int mid)
    {
        int sum = 0;
        int end = nums.size();
        for(int i=0;i<end;i++)
        {
            if(nums[i]%mid == 0)
                sum+=nums[i]/mid;
            else
                sum+=nums[i]/mid+1;
        }
        return sum;
    }
};
