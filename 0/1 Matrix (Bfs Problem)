Did it by myself , Apply BFS for all 0's (Not 1's) and update till the queue is not empty.
class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) 
    {
        int m = mat.size();
        int n = mat[0].size();
        vector<vector<int>> visited(m,vector<int>(n,0));
        vector<vector<int>> result(m,vector<int>(n,0));
        queue<pair<pair<int,int>,int>> q;
        for(int i=0;i<m;i++)
        {
            for(int j = 0;j<n ;j++)
            {
                if(mat[i][j] == 0)
                {
                    q.push({{i,j},0});
                    visited[i][j] = 1;
                    result[i][j] = 0;
                }   
            }
        }
        while(!q.empty())
        {
            int dist = q.front().second;
            int row = q.front().first.first;
            int column = q.front().first.second;
            q.pop();
            vector<int> delRow = {-1 , 0 , 1 ,0};
            vector<int> delCol = {0 , 1 , 0 , -1};
            for(int i=0;i<4;i++)
            {
                int nRow = row + delRow[i];
                int nCol = column + delCol[i];
                if(nRow >=0 && nRow<m && nCol >=0 && nCol<n && visited[nRow][nCol]==0)
                {
                    q.push({{nRow,nCol} , dist+1});
                    result[nRow][nCol] = dist+1;
                    visited[nRow][nCol] = 1;
                }
            }
        }
        return result;
    }
};
