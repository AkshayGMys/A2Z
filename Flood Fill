Did it by myself fulllllly .HURRRRAYYYYYYY

class Solution {
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int m = image.size();
        int n = image[0].size();
        vector<vector<int>> result = image;
        queue<pair<int,int>> q;
        int oldColor = image[sr][sc] ;
        result[sr][sc] = color;
        q.push({sr,sc});
        vector<vector<int>> visited(m,vector<int>(n,0));
        
        while(!q.empty())
        {

            int row = q.front().first;
            int column = q.front().second;
            q.pop();
            visited[row][column] = 1;
            result[row][column] = color;
            vector<int> sRow = { -1, 0 , 1 , 0};
            vector<int> sColumn = { 0 , 1 , 0 , -1};
            for(int i=0;i<4;i++)
            {
                int nRow = row + sRow[i];
                int nColumn = column + sColumn[i];
                if(nRow>=0 && nRow <m && nColumn>=0 && nColumn<n && image[nRow][nColumn] == oldColor && visited[nRow][nColumn]!=1)
                {
                    q.push({nRow,nColumn});
                }
            }
        }
        return result;
    }
};
