//The problem was if ((mid == 0 || nums[mid] > nums[mid - 1]) && (mid == last || nums[mid] > nums[mid + 1])) 
//I had not checked whether mid could be 0 or last 
class Solution {
public:
    int findPeakElement(vector<int>& nums) {

        int last = nums.size()-1;
        int first = 0;
        int mid;
        if(last==0)
            return last;
        if(nums[first]>nums[first+1])
            return first;
        if(nums[last]>nums[last-1])
            return last;
        while(first<=last)
        {
            mid = mid = first + (last - first) / 2;
            if ((mid == 0 || nums[mid] > nums[mid - 1]) && (mid == last || nums[mid] > nums[mid + 1])) 
                return mid;


            else
            if(nums[mid]<nums[mid+1])
            {
                first = mid+1;
            }
            else
            {
                last = mid-1;
            }
        }
        return -1;
    }
};
