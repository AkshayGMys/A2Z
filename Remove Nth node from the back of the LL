/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) 
    {
       if(head->next == nullptr)
            return nullptr;
        ListNode* temp = new ListNode();
        temp->next = head;
        ListNode* fast = temp;
        ListNode* slow = temp;
        for(int i=0;i<n+1;i++)
            fast = fast->next;

        while(fast!= nullptr)
        {
            slow = slow->next;
            fast = fast->next;
        }
        if(slow->next != head)
            slow->next = slow->next->next;
        else   
            return head->next;
        return head;
    }
};
