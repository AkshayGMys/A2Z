We are basically doing the dfs for the given graph here 
class Solution {
public:
    int province = 0;

    int findCircleNum(vector<vector<int>>& isConnected) 
    { 
        int n = isConnected.size();
        vector<int> visited(n,0);
        for(int i =0;i<visited.size();i++)
        {
            if(visited[i]!=1 )
            {
                province++;
                traverse(i,isConnected,n,visited);
            }   
        }   
        return province;
    }
    void traverse(int i ,vector<vector<int>>& isConnected,int n,vector<int>& visited)
    {
        for(int j = 0;j<n;j++)
        {
            visited[i] = 1;
            if(isConnected[i][j] == 1  && visited[j]==0)
            {
                traverse(j , isConnected ,n ,visited);
            }
                
        }
    }

};
