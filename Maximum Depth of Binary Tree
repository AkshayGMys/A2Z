//Easy solution just like we though about it 

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxCount = 0;
    int maxDepth(TreeNode* root) {
        if(!root)
            return 0;
        countN(root , 1);
        return maxCount;
    }
    void countN (TreeNode* root, int count)
    {
        if(root->right)countN(root->right , count+1);
        if(root->left) countN(root->left , count+1);
        maxCount = max(maxCount,count);
    }

};
