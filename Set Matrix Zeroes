
//THIS IS FOR INPLACE 
??CONECPT : USE FIRST ROW AND FIRST COLUMN FOR MARKERS, keep two bools to see wehther first row and column has any zeroes;
GO DOWN FOR IMPLEMENTATION WITH SETS.

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) 
    {
        int m = matrix.size(), n = matrix[0].size();
        bool isColumnZero = false, isRowZero = false;

        // Step 1: Check if first row needs to be zero
        for(int j = 0; j < n; j++) {
            if(matrix[0][j] == 0) {
                isRowZero = true;
                break;
            }
        }

        // Step 2: Check if first column needs to be zero
        for(int i = 0; i < m; i++) {
            if(matrix[i][0] == 0) {
                isColumnZero = true;
                break;
            }
        }

        // Step 3: Use first row & col as markers
        for(int i = 1; i < m; i++) {
            for(int j = 1; j < n; j++) {
                if(matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }

        // Step 4: Zero out cells based on markers
        for(int i = 1; i < m; i++) {
            if(matrix[i][0] == 0) {
                for(int j = 0; j < n; j++) {
                    matrix[i][j] = 0;
                }
            }
        }

        for(int j = 1; j < n; j++) {
            if(matrix[0][j] == 0) {
                for(int i = 0; i < m; i++) {
                    matrix[i][j] = 0;
                }
            }
        }

        // Step 5: Handle first row and first column separately
        if(isRowZero) {
            for(int j = 0; j < n; j++) {
                matrix[0][j] = 0;
            }
        }
        if(isColumnZero) {
            for(int i = 0; i < m; i++) {
                matrix[i][0] = 0;
            }
        }
    }
};


/////////////////////////////////////////////////////////////////////
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        set<int> rowSet;
        set<int> columnSet;
        for(int i=0;i<matrix.size();i++)
        {
            for(int j=0;j<matrix[0].size();j++)
            {
                if(matrix[i][j] == 0)
                {
                        rowSet.insert(i);
                        columnSet.insert(j);
                }
            }
        }
        for(auto it:rowSet)
        {
            for(int i=0;i<matrix[0].size();i++)
                matrix[it][i] =0;
        }
        for(auto it:columnSet)
        {
            for(int i=0;i<matrix.size();i++)
                matrix[i][it] =0;
        }
    }
};
