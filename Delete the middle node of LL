This was very similar to the previous question where you create a node behind the present head;

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) 
    {
        if(head->next == nullptr || head == nullptr)
            return nullptr;
        ListNode* slower = new ListNode();
        slower->next = head;
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast!= nullptr && fast->next != nullptr)
        {
            slower = slower->next;
            slow = slow->next;
            fast = fast->next->next;
        }
        slower->next = slow->next;
        delete slow;
        return head;
    }
};
